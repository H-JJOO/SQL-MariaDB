CREATE TABLE t_student2
(
	sno INT UNSIGNED AUTO_INCREMENT,
	nm CHAR(5) NOT NULL,
	age INT NOT NULL,	
	addr VARCHAR(20),
	PRIMARY KEY(sno)
);

INSERT INTO t_student2
(nm, age, addr)
VALUES
('홍길동', 20, '서울'),
('신사임당', 22, '대구'),
('강감찬', 24, '부산');

SELECT * FROM t_student2;

CREATE TABLE t_hobby
(
	hno INT UNSIGNED AUTO_INCREMENT,
	nm VARCHAR(10) NOT NULL,
	PRIMARY KEY(hno)
);

INSERT INTO t_hobby
(nm)
VALUES
('게임'),
('배타기'),
('수영'),
('등산'),
('명상'),
('붓글씨'),
('독서');

SELECT * FROM t_hobby;

DROP TABLE t_studenthobby;
CREATE TABLE t_studenthobby
(
	sno INT UNSIGNED,
	hno INT UNSIGNED,
	PRIMARY KEY(sno, hno),
	FOREIGN KEY(sno) REFERENCES t_student2(sno),
	FOREIGN KEY(hno) REFERENCES t_hobby(hno)
);

INSERT INTO t_studenthobby
(sno, hno)
VALUES
(1, 1),
(1, 3),
(1, 4),
(2, 6),
(2, 5),
(3, 2);

-- 외래키 벗어나서 오류뜸
INSERT INTO t_studenthobby
(sno, hno)
VALUES
(10, 10);

SELECT * FROM t_studenthobby;

-- 알리아스 Alias
SELECT A.sno AS ss, A.hno AS hh
FROM t_studenthobby A;

SELECT B.sno, B.nm, A.hno, C.nm
FROM t_studenthobby A
INNER JOIN t_student2 B
ON A.sno = B.sno
INNER JOIN t_hobby C
ON A.hno = C.hno
;

-- view 생성
CREATE VIEW view_joinresult
AS
SELECT B.sno, B.nm AS snm, A.hno, C.nm AS hnm
FROM t_studenthobby A
INNER JOIN t_student2 B
ON A.sno = B.sno
INNER JOIN t_hobby C
ON A.hno = C.hno;

-- view 삭제
DROP VIEW view_joinresult;

SELECT * FROM view_joinresult;

--------------------------------------------------------------------------------
SELECT
B.nm AS snm, B.age, B.addr, D.nm AS hnm
FROM t_studenthobby A
INNER JOIN t_student2 B
ON A.sno = B.sno
INNER JOIN t_hobby D
ON A.hno = D.hno
ORDER BY B.nm
;
--------------------------------------------------------------------------------
CREATE INDEX idx_student_age
ON t_student2 (age);

SELECT * FROM t_student2;

DROP INDEX idx_student_age
ON t_student2;

SHOW INDEX FROM t_student2;

-- primary key
-- unique
-- not null
-- index
--------------------------------------------------------------------------------
CREATE TABLE t_temp_1
(
	id INT UNSIGNED PRIMARY KEY,
	nm VARCHAR(5) NOT NULL
);

CREATE TABLE t_temp_2
(
	id INT UNSIGNED PRIMARY KEY,
	tid INT UNSIGNED,
	nm VARCHAR(5) NOT NULL
);

INSERT INTO t_temp_1 (id, nm)
VALUES (1, '가'), (2, '나'), (3, '다');

INSERT INTO t_temp_2 (id, tid, nm)
VALUES (1, 1, 'A'), (2, 1, 'B'), (3, 3,'C'), (4, 4, 'D');

SELECT * FROM t_temp_1;
SELECT * FROM t_temp_2;

-- inner join
SELECT
A.id AS id2, A.tid AS tid, A.nm AS nm2
, B.id AS id1, B.nm AS nm1
FROM t_temp_2 A
INNER JOIN t_temp_1 B
ON A.tid = B.id;

-- A(temp2) left join B(temp1)
SELECT
A.id AS id2, A.tid AS tid, A.nm AS nm2
, B.id AS id1, B.nm AS nm1
FROM t_temp_2 A
LEFT JOIN t_temp_1 B
ON A.tid = B.id;

-- A(temp1) left join B(temp2)
SELECT
A.*, B.tid, B.nm
FROM t_temp_1 A
LEFT JOIN t_temp_2 B
ON A.id = B.tid;
ORDER BY A.id;

-- A(temp2) left join B(temp1)
SELECT
A.*, IFNULL(B.id, 0) AS id 
, IFNULL(B.nm, '값 없음') AS nm
FROM t_temp_2 A LEFT JOIN t_temp_1 B
ON A.tid = B.id
ORDER BY A.tid;

-- 서브쿼리, like문 between, 주로 쓰는 함수 UNION(ALL), IF문, CASE문, ERD 


