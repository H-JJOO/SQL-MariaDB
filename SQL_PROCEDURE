DELETE FROM t_order;
SELECT * FROM t_order;
SELECT * FROM t_customer;

CREATE TABLE T_CUSTOMER(
	CUS_NO INT PRIMARY KEY,
	NM VARCHAR(10) NOT NULL
);

 
CREATE TABLE T_ORDER (
	O_NO INT PRIMARY KEY,
	CUS_NO INT,
	O_DATE DATE DEFAULT NOW(),
	O_PRICE INT DEFAULT 0,
	FOREIGN KEY (CUS_NO) REFERENCES T_CUSTOMER(CUS_NO)
);

INSERT INTO t_customer
(cus_no, nm)
VALUES
(3, '홍길동'),
(5, '이순신') ;

INSERT INTO T_ORDER
(o_no,cus_no,o_price)
VALUES
(1, 3, 55000),
(2, 5, 70000),
(3, 3, 60000) ;test2

------------------------------------------------------

SELECT (MAX(o_no), 0) + 1 FROM t_order;

------------------------------------------------------

DROP PROCEDURE proc_INS_ORDER;
-- DELIMITER $$ 
-- 한문장의 끝을 알리는 ; 의 역할을 $$ 에게 넘기고 프로시저나
-- 펑션의 한 달락의 끝에 한문장의 끝을 알리는 $$ 를써서 
-- 프로시저나 펑션을 완료시킨다.
-- 프로시저 
-- 쓰기전에는 당연히 테이블이 있어야함

DELIMITER $$ 
CREATE PROCEDURE proc_INS_ORDER(
	P_CUS_NO INTEGER,
	P_PRICE INTEGER
)
BEGIN
	DECLARE V_O_NO INTEGER; -- 변수 선언
	
	SELECT IFNULL(MAX(o_no), 0) + 1 
	INTO V_O_NO	
	FROM t_order;
	
	INSERT INTO t_order
	(o_no, cus_no, o_price)
	VALUES
	(V_O_NO, P_CUS_NO, P_PRICE);
	
END $$
DELIMITER ;


CALL proc_INS_ORDER(6, 100000);
-- FOREIGN KEY 걸려있어서 3, 5 밖에 못씀
-- 6 추가해서 지금은 3,5,6 가능

SELECT * FROM t_order;

SELECT NOW();

-- 만약에 프로시저가 있으면 DROP 하는 문법을 작성해라
-- 에러는 안뜸, TABLE 도 마찬가지

DROP PROCEDURE IF EXISTS proc_INS_ORDER;









